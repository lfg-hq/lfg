# Generated by Django 4.2.7 on 2025-07-17 00:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def migrate_api_keys_to_new_model(apps, schema_editor):
    """Migrate API keys from Profile to LLMApiKeys model"""
    Profile = apps.get_model('accounts', 'Profile')
    LLMApiKeys = apps.get_model('accounts', 'LLMApiKeys')
    
    # Get all profiles with API keys
    for profile in Profile.objects.all():
        has_keys = any([
            profile.openai_api_key,
            profile.anthropic_api_key,
            profile.groq_api_key,
            profile.linear_api_key
        ])
        
        if has_keys:
            # Create LLMApiKeys for this user
            LLMApiKeys.objects.create(
                user=profile.user,
                openai_api_key=profile.openai_api_key or '',
                anthropic_api_key=profile.anthropic_api_key or '',
                groq_api_key=profile.groq_api_key or '',
                linear_api_key=profile.linear_api_key or '',
                free_trial=False  # Set to False since they have API keys
            )


def reverse_api_keys_migration(apps, schema_editor):
    """Reverse migration - move API keys back to Profile model"""
    Profile = apps.get_model('accounts', 'Profile')
    LLMApiKeys = apps.get_model('accounts', 'LLMApiKeys')
    
    for llm_keys in LLMApiKeys.objects.all():
        try:
            profile = Profile.objects.get(user=llm_keys.user)
            profile.openai_api_key = llm_keys.openai_api_key
            profile.anthropic_api_key = llm_keys.anthropic_api_key
            profile.groq_api_key = llm_keys.groq_api_key
            profile.linear_api_key = llm_keys.linear_api_key
            profile.save()
        except Profile.DoesNotExist:
            pass


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0010_emailverificationcode'),
    ]

    operations = [
        # First, create the new model
        migrations.CreateModel(
            name='LLMApiKeys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openai_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('anthropic_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('groq_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('linear_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('free_trial', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='llm_api_keys', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        # Then, migrate the data
        migrations.RunPython(migrate_api_keys_to_new_model, reverse_api_keys_migration),
        # Finally, remove the old fields
        migrations.RemoveField(
            model_name='profile',
            name='anthropic_api_key',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='groq_api_key',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='linear_api_key',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='openai_api_key',
        ),
    ]