# Generated by Django 4.2.7 on 2025-10-09 02:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('codebase_index', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodebaseIndexMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(db_index=True, help_text='Relative file path', max_length=1000)),
                ('entity_type', models.CharField(db_index=True, help_text='Type: file, function, class, method', max_length=20)),
                ('entity_name', models.CharField(db_index=True, help_text='Name of function/class/method or file name', max_length=500)),
                ('fully_qualified_name', models.CharField(db_index=True, help_text="Full path like 'module.Class.method'", max_length=1000)),
                ('language', models.CharField(db_index=True, help_text='Programming language', max_length=50)),
                ('start_line', models.IntegerField(help_text='Start line in file')),
                ('end_line', models.IntegerField(help_text='End line in file')),
                ('parameters', models.JSONField(default=list, help_text='Function parameters')),
                ('return_type', models.CharField(blank=True, help_text='Return type if available', max_length=200, null=True)),
                ('dependencies', models.JSONField(default=list, help_text='Imports and dependencies')),
                ('decorators', models.JSONField(default=list, help_text='Decorators or annotations')),
                ('description', models.TextField(blank=True, help_text='Brief description or docstring')),
                ('keywords', models.JSONField(default=list, help_text='Extracted keywords for search')),
                ('complexity', models.CharField(default='medium', help_text='Complexity level', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code_chunk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='index_entries', to='codebase_index.codechunk')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='index_maps', to='codebase_index.indexedrepository')),
            ],
            options={
                'verbose_name': 'Codebase Index Map',
                'verbose_name_plural': 'Codebase Index Maps',
                'indexes': [models.Index(fields=['repository', 'entity_type'], name='codebase_in_reposit_33a68e_idx'), models.Index(fields=['repository', 'entity_name'], name='codebase_in_reposit_6586f7_idx'), models.Index(fields=['repository', 'language'], name='codebase_in_reposit_1b8a76_idx'), models.Index(fields=['fully_qualified_name'], name='codebase_in_fully_q_8271ac_idx'), models.Index(fields=['file_path', 'entity_type'], name='codebase_in_file_pa_501124_idx')],
                'unique_together': {('repository', 'file_path', 'entity_name', 'start_line')},
            },
        ),
    ]
